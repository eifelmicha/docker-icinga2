# assemble container
FROM    debian:buster-slim
LABEL   maintainer="Michael Schmitz <s_michael1@gmx.de>"

# image config
EXPOSE 5665
WORKDIR /etc/icinga2

# variables
ARG     BUILD_DATE
ARG     BUILD_VERSION
ARG     ICINGA2_VERSION

ENV     TERM=xterm \
        DEBIAN_FRONTEND=noninteractive \
        TZ='Europe/Berlin'
        APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 \

# install basic required utils
RUN     chsh -s /bin/bash \
&&      ln -sf /bin/bash /bin/sh \
&&      apt-get update \
&&      apt-get -y install --no-install-recommends \
                apt-transport-https \
                bc \
                bind9-host \
                bind9utils \
                bsd-mailx \
                ca-certificates \
                curl \
                dnsutils \
                expect \
                file \
                fping \
                gettext-base \
                gnupg \
                inotify-tools \
                jq \
                locales \
                lsb-release \
                mariadb-client \
                monitoring-plugins \
                msmtp \
                msmtp-mta \
                nagios-nrpe-server \
                netcat-openbsd \
                openssl \
                psmisc \
                pwgen \
                python3.5-minimal \
                libtext-english-perl \
                tzdata \
                unzip \
                wget \
                xz-utils \
&&      echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen \
&&      sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
&&      sed -i -e 's/# de_DE.UTF-8 UTF-8/de_DE.UTF-8 UTF-8/' /etc/locale.gen \
&&      dpkg-reconfigure --frontend=noninteractive locales \
&&      locale-gen && update-locale LANG=en_US.UTF-8 \
#
# upgrade system (incl. updated packages from php repo)
&&      apt-get update \
&&      apt-get upgrade -y \
#
# install icinga2 web packages
&&      wget -O - https://packages.icinga.com/icinga.key | apt-key add - \
&&      echo "deb https://packages.icinga.com/debian icinga-$(lsb_release -sc) main" > /etc/apt/sources.list.d/icinga.list \
&&      echo "deb-src https://packages.icinga.com/debian icinga-$(lsb_release -sc) main" >> /etc/apt/sources.list.d/icinga.list \
&&      apt-get update \
&&      apt-get install -y --no-install-recommends \
                icinga2-bin \
                icinga2-ido-mysql
#
# Clean up icinga2 folders
#
RUN     mkdir -p /etc/icinga2/objects.d \
&&      mkdir -p /run/icinga2/cmd \
&&      mkdir -p /etc/icinga2/zones.d/global-templates \
&&      mkdir -p /etc/icinga2/zones.d/director-global \
&&      cp /etc/icinga2/zones.conf /etc/icinga2/zones.conf-distributed \
&&      mv /etc/icinga2/conf.d/{commands,groups,notifications,templates}.conf /etc/icinga2/zones.d/global-templates \
&&      rm -rf \
          /tmp/* \
          /etc/icinga2/conf.d/* \
          /var/cache/debconf/* \
          /usr/share/doc/* \
          /root/.gem \
          /root/.cache \
          /root/.bundle 2> /dev/null \
&&      find /var/log -type f -print0 | while IFS= read -r -d '' i; do echo "" > "${i}"; done \
&&      echo "" \
&&      command -v icinga2 \
&&      icinga2 --version \
&&      icinga2 daemon --validate \
&&      icinga2 feature list \
&&      echo "" \
&&      export ICINGA2_VERSION=$(icinga2 --version | head -n1 | awk -F 'version: ' '{printf $2}' | awk -F '-' '{print $1}' | sed 's|r||') \
&&      echo "export BUILD_DATE=${BUILD_DATE}"            > /etc/profile.d/icinga2.sh \
&&      echo "export BUILD_VERSION=${BUILD_VERSION}"     >> /etc/profile.d/icinga2.sh \
&&      echo "export ICINGA2_VERSION=${ICINGA2_VERSION}" >> /etc/profile.d/icinga2.sh \
&&      echo "export ICINGA2_TYPE=${ICINGA2_TYPE}"       >> /etc/profile.d/icinga2.sh
#
# cleanup apt mess
RUN     apt-get clean \
&&      rm -rf \
                /var/lib/apt/lists/* \
                /tmp/* \
                /var/tmp/*

COPY rootfs/ /
COPY build/check_mem      /usr/lib/nagios/plugins/check_mem

VOLUME ["/etc/icinga2", "/var/lib/icinga2", "/var/spool/icinga2", "/var/cache/icinga2"]

CMD ["/init/run.sh"]

HEALTHCHECK \
  --interval=30s \
  --timeout=2s \
  --retries=10 \
  --start-period=15s \
  CMD /init/healthcheck.sh
