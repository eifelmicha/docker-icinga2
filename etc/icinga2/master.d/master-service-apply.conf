apply Service "agent-health" {
  check_command = "cluster-zone"
  check_interval = AGENT_HEALTH_CHECK_SEC
  retry_interval = AGENT_HEALTH_RETRY_SEC

  # display_name = "agent-health for " + host.name

  /* This follows the convention that the agent zone name is the FQDN which is the same as the host object name. */
  vars.cluster_zone = host.name

  assign where host.vars.agent_endpoint
}

apply Service "ha_disk" {
  import "generic-service"

  # display_name = "disk for " + host.name

  check_command = "disk"
  command_endpoint = host.name
  assign where host.vars.ic2_type == "master"
}

apply Service "ha_icinga" {
  import "generic-service"

  display_name = "icinga for " + host.name

  check_command = "icinga"
  assign where host.vars.ic2_type == "master"
}

apply Service "ha_load" {
  import "generic-service"

  # display_name = "load for " + host.name

  check_command = "load"

  vars.load_wload1  = CPU_WLOAD1
  vars.load_wload5  = CPU_WLOAD5
  vars.load_wload15 = CPU_WLOAD15
  vars.load_cload1  = CPU_CLOAD1
  vars.load_cload5  = CPU_CLOAD5
  vars.load_cload15 = CPU_CLOAD15
  vars.load_percpu  = true

  assign where host.vars.ic2_type == "master"
}

apply Service "ha_memory" {
  import "generic-service"

  # display_name = "memory for " + host.name

  check_command = "check_memory"

  assign where host.vars.ic2_type == "master"
}

apply Service "master_cluster" {
  import "generic-service"

  # display_name = "clustercheck for " + host.name

  check_command = "cluster"
  check_interval = 5s
  retry_interval = 1s

  assign where host.vars.ic2_type == "master"
}
